#SPDX-License-Identifier: MIT-0
---
# tasks file for provision

- name: Check if SSH key already exists in Vault
  community.hashi_vault.vault_read:
    url: "https://vault.ryuugu.dev"
    path: "kv2/{{ inventory_hostname }}/ssh/public"
    token: "{{ vault_root_password }}"
    validate_certs: true
  register: ssh_key
  ignore_errors: true

- name: Create the SSH keypair for the server
  block:

    - name: Create id25519 SSH key for server
      community.crypto.openssh_keypair:
        path: "/tmp/{{ inventory_hostname }}_ssh_key"
        type: "ed25519"
      when: ssh_key.data == {}

    - name: Upload the public SSH key to vault
      community.hashi_vault.vault_write:
        url: "https://vault.ryuugu.dev"
        path: "kv2/{{ inventory_hostname }}/ssh/public"
        data:
          key: "{{ lookup('file', '/tmp/{{ inventory_hostname }}_ssh_key.pub') }}"
        token: "{{ vault_root_password }}"
        validate_certs: true
      retries: 50
      delay: 5

    - name: Upload the private SSH key to vault
      community.hashi_vault.vault_write:
        url: "https://vault.ryuugu.dev"
        path: "kv2/{{ inventory_hostname }}/ssh/private"
        data:
          key: "{{ lookup('file', '/tmp/{{ inventory_hostname }}_ssh_key') }}"
        token: "{{ vault_root_password }}"
        validate_certs: true
      retries: 50
      delay: 5
  when: ssh_key.data == {}

- name: Partition the storage device
  include_tasks: partition

- name: Start the provisioning process
  include_role:
    name: provision
    tasks_from: provision

- name: Remove the temporary SSH key files
  file:
    path: "{{ item }}"
    state: absent
  with_fileglob:
    - "/tmp/{{ inventory_hostname }}_ssh_key*"
