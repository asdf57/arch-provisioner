---

# Let's setup the 

# provisioning API, nginx reverse proxy, create cert, ipxe

- name: Create git id25519 SSH key
  community.crypto.openssh_keypair:
    path: "{{ git_ssh_key_path }}"
    type: "ed25519"

- name: Create provisioning id25519 SSH key
  community.crypto.openssh_keypair:
    path: "{{ provisioning_ssh_key_path }}"
    type: "ed25519"

- name: Template the docker-compose file
  template:
    src: docker-compose.yml.j2
    dest: "{{ role_path }}/files/docker-compose.yml"

- name: Clone the provisoning API repo
  git:
    repo: "{{ provisioning_api_repo }}"
    dest: "{{ role_path }}/files/provisioning-api"
    version: "{{ provisioning_api_version }}"
    force: yes

# - name: Build ISOs
#   ansible.builtin.shell:
#     cmd: |
#       ./scripts/os/build.sh -o ../../out -p "{{ provisioning_ssh_key_path }}" {{ item }} -t netboot
#   args:
#     chdir: "../../"
#   with_items:
#     - debian
#     - arch

- name: Template dnsmasq.conf
  template:
    src: dnsmasq.conf.j2
    dest: "{{ role_path }}/files/dnsmasq/dnsmasq.conf"

- name: Template nginx.conf
  template:
    src: default.conf.j2
    dest: "{{ role_path }}/files/nginx/default.conf"

# - name: Template grub.cfg
#   template:
#     src: grub.cfg.j2
#     dest: {{ role_path }}/files/nginx/grub.cfg

- name: Delete the ipvlan network
  community.docker.docker_network:
    name: ipvlan
    state: absent
  ignore_errors: yes

- name: Build the docker-compose
  community.docker.docker_compose_v2:
    project_src: "{{ role_path }}/files"
    state: present
    build: always
