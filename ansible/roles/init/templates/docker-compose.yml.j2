services:
  http:
    build: ./provisioning-api
    ports:
      - "3000:3000"
    secrets:
      - git_provisioning_key
    networks:
      clusternet:
        ipv4_address: "{{ server_api_ipv4 }}"

  vault:
    build: ./vault
    container_name: vault
    ports:
      - 8200:8200
    cap_add:
      - IPC_LOCK
    restart: always
    volumes:
      - "{{ role_path }}/files/vault/internal:/vault"
    environment:
      VAULT_ADDR: "http://127.0.0.1:8200"
      VAULT_API_ADDR: "http://vault:8200"
    networks:
      clusternet:
        ipv4_address: "{{ vault_ipv4 }}"

  nginx:
    build: ./nginx
    container_name: nginx
    networks:
      clusternet:
        ipv4_address: "{{ nginx_ipv4 }}"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "{{ role_path }}/files/nginx/files:/www/data"
    restart: always
    labels:
      - sh.acme.autoload.domain={{ nginx_acme_label }}

  dnsmasq:
    build: ./dnsmasq
    network_mode: host
    # volumes:
    #   - dnsmasq-config:/etc/dnsmasq
    depends_on:
      - nginx
    restart: always

  acme:
    build: ./acme
    container_name: acme
    network_mode: host
    environment:
      - CF_Token="{{ cloudflare_api_key }}"
      - CF_Email="{{ cloudflare_email }}"
      - ACME_DOMAIN={{ cloudflare_domain }}
      - ACME_SERVER={{ cert_authority }}
      - ZEROSSL_EAB_KID={{ zerossl_eab_kid }}
      - ZEROSSL_EAB_HMAC_KEY={{ zerossl_eab_hmac_key }}
      - ZEROSSL_EMAIL={{ zerossl_email }}
      - DNS_API=dns_cf
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ role_path }}/files/acme/acme.sh:/acme.sh"
    restart: always
    depends_on:
      - nginx

secrets:
  git_provisioning_key:
    file: "{{ git_ssh_key_path }}"

networks:
  clusternet:
    driver: "{{ network_driver }}"
    driver_opts:
      mode: "{{ ipvlan_mode if network_driver == 'ipvlan' else macvlan_mode }}"
      parent: "{{ interface }}"
    ipam:
      config:
        - subnet: "{{ ipvlan_subnet if network_driver == 'ipvlan' else macvlan_subnet }}"
          gateway: "{{ ipvlan_gateway if network_driver == 'ipvlan' else macvlan_gateway }}"
